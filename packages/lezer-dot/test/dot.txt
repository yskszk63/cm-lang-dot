# minimum

graph { }

==>

Graph(graph, StmtList)

# minimum with id

graph id { }

==>

Graph(graph, ID(Simpleid), StmtList)

# minimum with quoted id

graph "\"" { }

==>

Graph(graph, ID(Quoted), StmtList)

# minimum with numeral id

graph 3.14 { }

==>

Graph(graph, ID(Numeral), StmtList)

# minimum with html id

graph <html> { }

==>

Graph(graph, ID(Htmlstr), StmtList)

# with node_stmt

graph T { n }

==>

Graph(graph, ID(Simpleid), StmtList(NodeStmt(ID(Simpleid))))

# with node_stmt with port

graph T { n:p }

==>

Graph(graph, ID(Simpleid), StmtList(NodeStmt(ID(Simpleid),ID(Simpleid))))

# with node_stmt with port and compass

graph T { n:p:n }

==>

Graph(graph, ID(Simpleid), StmtList(NodeStmt(ID(Simpleid), ID(Simpleid), CompassPt)))

# with edge_stmt

graph T { n -> ne }

==>

Graph(graph,ID(Simpleid), StmtList(EdgeStmt(ID(Simpleid), edgeop, ID(Simpleid))))

# with edge_stmt with subgraph

graph T { {} -> {} }

==>

Graph(graph, ID(Simpleid), StmtList(EdgeStmt(Subgraph(StmtList), edgeop, Subgraph(StmtList))))

# with edge_stmt with attr

graph T { n -> ne [color=blue] }

==>

Graph(graph, ID(Simpleid), StmtList(EdgeStmt(ID(Simpleid), edgeop, ID(Simpleid), AttrList(Attr(ID(Simpleid), ID(Simpleid))))))

# with attr_stmt graph

graph T { graph [color=blue] }

==>

Graph(graph, ID(Simpleid), StmtList(AttrStmt(graph, AttrList(Attr(ID(Simpleid), ID(Simpleid))))))

# with attr_stmt edge

graph T { edge [color=blue] }

==>

Graph(graph, ID(Simpleid), StmtList(AttrStmt(edge, AttrList(Attr(ID(Simpleid), ID(Simpleid))))))

# with attr_stmt node

graph T { node [color=blue] }

==>

Graph(graph, ID(Simpleid), StmtList(AttrStmt(node, AttrList(Attr(ID(Simpleid), ID(Simpleid))))))

# with prop

graph T { color=blue }

==>

Graph(graph, ID(Simpleid), StmtList(Prop(ID(Simpleid), ID(Simpleid))))

# with subgraph

graph T { { a -- b } }

==>

Graph(graph, ID(Simpleid), StmtList(Subgraph(StmtList(EdgeStmt(ID(Simpleid), edgeop, ID(Simpleid))))))

# line comment

// comment
graph {}

==>
Graph(LineComment, graph, StmtList)

# block comment

graph { /* a -> b */}

==>
Graph(graph, StmtList(BlockComment))

# sharp comment

# comment
graph {}

==>
Graph(SharpComment, graph, StmtList)
