# minimum

graph { }

==>

Graph(graph)

# minimum with id

graph id { }

==>

Graph(graph,ID(Simpleid),"{","}")

# minimum with quoted id

graph "\"" { }

==>

Graph(graph,ID(Quoted),"{","}")

# minimum with numeral id

graph 3.14 { }

==>

Graph(graph,ID(Numeral),"{","}")

# minimum with html id

graph <html> { }

==>

Graph(graph,ID(Htmlstr),"{","}")

# with node_stmt

graph T { n }

==>

Graph(graph,ID(Simpleid),"{",NodeStmt(ID(Simpleid)),"}")

# with node_stmt with port

graph T { n:p }

==>

Graph(graph,ID(Simpleid),"{",NodeStmt(ID(Simpleid),ID(Simpleid)),"}")

# with node_stmt with port and compass

graph T { n:p:n }

==>

Graph(graph,ID(Simpleid),"{",NodeStmt(ID(Simpleid),ID(Simpleid),CompassPt),"}")

# with edge_stmt

graph T { n -> ne }

==>

Graph(graph,ID(Simpleid),"{",EdgeStmt(ID(Simpleid),edgeop,ID(Simpleid)),"}")

# with edge_stmt with subgraph

graph T { {} -> {} }

==>

Graph(graph,ID(Simpleid),"{",EdgeStmt(Subgraph("{","}"),edgeop,Subgraph("{","}")),"}")

# with edge_stmt with attr

graph T { n -> ne [color=blue] }

==>

Graph(graph,ID(Simpleid),"{",EdgeStmt(ID(Simpleid),edgeop,ID(Simpleid),Attr(ID(Simpleid),ID(Simpleid))),"}")

# with attr_stmt graph

graph T { graph [color=blue] }

==>

Graph(graph,ID(Simpleid),"{",AttrStmt(graph,Attr(ID(Simpleid),ID(Simpleid))),"}")

# with attr_stmt edge

graph T { edge [color=blue] }

==>

Graph(graph,ID(Simpleid),"{",AttrStmt(edge,Attr(ID(Simpleid),ID(Simpleid))),"}")

# with attr_stmt node

graph T { node [color=blue] }

==>

Graph(graph,ID(Simpleid),"{",AttrStmt(node,Attr(ID(Simpleid),ID(Simpleid))),"}")

# with prop

graph T { color=blue }

==>

Graph(graph,ID(Simpleid),"{",Prop(ID(Simpleid),ID(Simpleid)),"}")

# with subgraph

graph T { { a -- b } }

==>

Graph(graph,ID(Simpleid),"{",Subgraph("{",EdgeStmt(ID(Simpleid),edgeop,ID(Simpleid)),"}"),"}")

# line comment

// comment
graph {}

==>
Graph(LineComment, graph)

# block comment

graph { /* a -> b */}

==>
Graph(graph, BlockComment)

# sharp comment

# comment
graph {}

==>
Graph(SharpComment, graph)
