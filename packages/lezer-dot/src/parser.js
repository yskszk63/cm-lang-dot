// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {NodeProp} from "@lezer/common"
const spec_Simpleid = {__proto__:null,strict:70, graph:72, digraph:74, n:87, ne:87, e:87, se:87, s:87, sw:87, w:87, nw:87, c:87, _:87, subgraph:90, node:92, edge:94}
export const parser = LRParser.deserialize({
  version: 13,
  states: ")SOYQPOOOOQO'#C^'#C^OOQO'#C`'#C`OOQO'#Ca'#CaOeQPOOO]QPOOOOQO'#Cb'#CbOvQPOOOqQPOOO#fQPO'#DUO#mQPO'#CgOOQO'#Cp'#CpOvQPO'#CoO$hQPO'#CoOOQO'#Ct'#CtOOQO'#Cu'#CuOOQO'#DT'#DTO$yQPO'#DTO%qQPO'#CwO'TQPO'#DSO'[QPOOO'aQPO'#CsO'fQPO'#DVOOQO,59p,59pO'wQPO,59bO(VQPO'#CxO(hQPO,59RO)`QPO'#CzO)tQPO,59YO*oQPO,59ZOvQPO,59ZO*tQPO,59ZOOQO,59c,59cOOQO-E6u-E6uQOQPOOO*yQPO,59_OOQO'#Ch'#ChO+qQPO,59qOOQO,59q,59qOOQO1G.|1G.|O,oQPO'#CjO,tQPO'#CyO-]QPO,59dOOQO,59d,59dOOQO-E6v-E6vO!hQPO'#DUOOQO,59f,59fO-nQPO1G.tOOQO-E6x-E6xOOQO1G.u1G.uO.fQPO1G.uOvQPO1G.uO'rQPO1G/]O'wQPO,59UOOQO,59e,59eOOQO-E6w-E6wOOQO1G/O1G/OOOQO7+$a7+$aO.kQPO7+$aOOQO7+$w7+$wOOQO1G.p1G.pOOQO<<G{<<G{",
  stateData: ".p~OqOSrOS~OsPOtQOuRO~ORUOVUOWUOXUOYVO~ORUOVUOWUOXUOY[OtQO}ZO!O^O!P_OevP~OzfORxXVxXWxXXxXYxX]xX_xXexXfxXtxX}xX!OxX!PxX~O|hO~P!hO]iOfkORZXVZXWZXXZXYZX_ZXeZXtZX}ZX!OZX!PZX~ORUOVUOWUOXUOYnO~OfkORwXVwXWwXXwXYwX_wXewXtwX}wX!OwX!PwX~O_pORkXVkXWkXXkXYkXekXtkX}kX!OkX!PkX~ORUOVUOWUOXUOY[OtQO}ZO!O^O!P_O~OevX~P&fOerO~O]iO~ORUOVUOWUOXUO{tO~ORUOVUOWUOXUO~ORUOVUOWUOXUOa{O~O]iORZaVZaWZaXZaYZa_ZaeZatZa}Za!OZa!PZa~ORUOVUOWUOXUOY[O}ZO~O]iOfkORbaVbaWbaXbaYba_baebatba}ba!Oba!Pba~Oe!RO~OY!TO~O]iORgaVgaWgaXgaYga_gaegatga}ga!Oga!Pga~Oz!UORyaVyaWyaXyaYya]ya_yaeyafyatya}ya!Oya!Pya~O|!VO~O_!WO`!WORmXVmXWmXXmXamX~ORUOVUOWUOXUOa!YO~O]iORbiVbiWbiXbiYbi_biebitbi}bi!Obi!Pbi~Oe!ZO~Oe!_O~O",
  goto: "%YzPP{P!O!Z!_PPPP!|#TP#ZPPP!|#_#iPP!|!S!S!|#q#z$Y$`PPPPPPP$g$s$z%URTOSSOTZeV[cn!TTSOTQWSYXV[cn!TQo]QufQwhSxizQ}kR!^!VZ`V[cn!TQvfR!]!UTyizYaV[cn!TR!Ok]]V[ckn!TWcV[n!TRqcQjYQseU|js!PR!PlQziR!XzSlYaR!QlQdVQm[Q!SnR![!TZbV[cn!TYYV[cn!TR!OkTgX}",
  nodeNames: "âš  Graph strict Simpleid graph digraph ID Numeral Quoted Htmlstr { NodeStmt CompassPt [ Attr ; , ] EdgeStmt Subgraph subgraph } edgeop AttrStmt node edge Prop",
  maxTerm: 47,
  nodeProps: [
    [NodeProp.group, -5,11,18,19,23,26,"Stmt"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "'^~RoXY#SYZ#wZ[#S]^#wpq#Srs#||}$n}!O$s!O!P%X!Q![%g![!]%r!]!^%w!^!_%|!_!`&_!c!}&d!}#O&x#P#Q&}#R#S&d#T#o&d#o#p'S#q#r'X$f$g#S,U4^&d#BY#BZ#S$IS$I_#S$I|$I}#w$I}$JO#w$JT$JU#S$KV$KW#S&FU&FV#S?HT?HU#S~#XYq~XY#SZ[#Spq#S$f$g#S#BY#BZ#S$IS$I_#S$JT$JU#S$KV$KW#S&FU&FV#S?HT?HU#S~#|Or~~$PUOY#|Zr#|rs$cs#O#|#O#P$h#P~#|~$hOW~~$kPO~#|~$sO`~~$vS}!O%S!O!P%X!Q![%g!`!a%S~%XOf~~%[P!Q![%_~%dPV~!Q![%_~%lQV~!O!P%_!Q![%g~%wOz~~%|O_~~&PRO!`%|!`!a&Y!a~%|~&_OX~~&dO|~~&iTR~!Q![&d!c!}&d#R#S&d#T#o&d,U4^&d~&}O]~~'SOa~~'XOY~~'^Oe~",
  tokenizers: [0],
  topRules: {"Graph":[0,1]},
  specialized: [{term: 3, get: value => spec_Simpleid[value] || -1}],
  tokenPrec: 0
})
