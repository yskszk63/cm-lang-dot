// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {NodeProp} from "@lezer/common"
const spec_simpleid = {__proto__:null,strict:50, graph:52, digraph:54, n:75, ne:75, e:75, se:75, s:75, sw:75, w:75, nw:75, c:75, _:75, subgraph:86, node:92, edge:94}
export const parser = LRParser.deserialize({
  version: 13,
  states: ")SOYQPOOOOQO'#C^'#C^OOQO'#C_'#C_OOQO'#C`'#C`OeQPOOO]QPOOOOQO'#Ca'#CaOvQPOOOqQPOOO#fQPO'#DOO#mQPO'#CbOOQO'#Cg'#CgOvQPO'#CfO$hQPO'#CfOOQO'#Ci'#CiOOQO'#Cj'#CjOOQO'#C}'#C}O$yQPO'#C}O%qQPO'#ClO'TQPO'#C|O'[QPOOO'aQPO'#ChO'fQPO'#DPOOQO,59j,59jO'wQPO,59VO(VQPO'#CmO(hQPO,58|O)`QPO'#CoO)tQPO,59PO*oQPO,59QOvQPO,59QO*tQPO,59QOOQO,59W,59WOOQO-E6j-E6jQOQPOOO*yQPO,59SOOQO'#Cc'#CcO+qQPO,59kOOQO,59k,59kOOQO1G.q1G.qO,oQPO'#CdO,tQPO'#CnO-]QPO,59XOOQO,59X,59XOOQO-E6k-E6kO!hQPO'#DOOOQO,59Z,59ZO-nQPO1G.kOOQO-E6m-E6mOOQO1G.l1G.lO.fQPO1G.lOvQPO1G.lO'rQPO1G/VO'wQPO,59OOOQO,59Y,59YOOQO-E6l-E6lOOQO1G.s1G.sOOQO7+$W7+$WO.kQPO7+$WOOQO7+$q7+$qOOQO1G.j1G.jOOQO<<Gr<<Gr",
  stateData: ".p~OfOSgOS~OiPOjQOkRO~OhUOlUOmUOnUOoVO~OhUOjQOlUOmUOnUOo[O{ZO!O^O!P_O|pP~OtfOhrXjrXlrXmrXnrXorXvrXxrX{rX|rX}rX!OrX!PrX~OwhO~P!hOviO}kOhUXjUXlUXmUXnUXoUXxUX{UX|UX!OUX!PUX~OhUOlUOmUOnUOonO~O}kOhqXjqXlqXmqXnqXoqXxqX{qX|qX!OqX!PqX~OxpOh`Xj`Xl`Xm`Xn`Xo`X{`X|`X!O`X!P`X~OhUOjQOlUOmUOnUOo[O{ZO!O^O!P_O~O|pX~P&fO|rO~OviO~OhUOlUOmUOnUOutO~OhUOlUOmUOnUO~OhUOlUOmUOnUOz{O~OviOhUajUalUamUanUaoUaxUa{Ua|Ua!OUa!PUa~OhUOlUOmUOnUOo[O{ZO~OviO}kOhXajXalXamXanXaoXaxXa{Xa|Xa!OXa!PXa~O|!RO~Oo!TO~OviOh[aj[al[am[an[ao[ax[a{[a|[a!O[a!P[a~Ot!UOhsajsalsamsansaosavsaxsa{sa|sa}sa!Osa!Psa~Ow!VO~Ox!WOy!WOhbXlbXmbXnbXzbX~OhUOlUOmUOnUOz!YO~OviOhXijXilXimXinXioXixXi{Xi|Xi!OXi!PXi~O|!ZO~O|!_O~O",
  goto: "%StPPux!T!X!v!}#T!v#X#c!v||!v#k#t$S$YPPPPPPPPPPPP$a$m$t%ORTOSSOTZeV[cn!TTSOTQWSYXV[cn!TQo]QufQwhSxizQ}kR!^!VZ`V[cn!TQvfR!]!UTyizYaV[cn!TR!Ok]]V[ckn!TWcV[n!TRqcQjYQseU|js!PR!PlQziR!XzSlYaR!QlQdVQm[Q!SnR![!TZbV[cn!TYYV[cn!TR!OkTgX}",
  nodeNames: "âš  graph strict graph digraph ID NodeStmt CompassPt Attr EdgeStmt Subgraph subgraph AttrStmt node edge Prop",
  maxTerm: 47,
  nodeProps: [
    [NodeProp.group, -5,6,9,10,12,15,"Stmt"]
  ],
  skippedNodes: [0],
  repeatNodeCount: 4,
  tokenData: "'^~RoXY#SYZ#wZ[#S]^#wpq#Srs#||}$n}!O$s!O!P%X!Q![%g![!]%r!]!^%w!^!_%|!_!`&_!c!}&d!}#O&x#P#Q&}#R#S&d#T#o&d#o#p'S#q#r'X$f$g#S,U4^&d#BY#BZ#S$IS$I_#S$I|$I}#w$I}$JO#w$JT$JU#S$KV$KW#S&FU&FV#S?HT?HU#S~#XYf~XY#SZ[#Spq#S$f$g#S#BY#BZ#S$IS$I_#S$JT$JU#S$KV$KW#S&FU&FV#S?HT?HU#S~#|Og~~$PUOY#|Zr#|rs$cs#O#|#O#P$h#P~#|~$hOm~~$kPO~#|~$sOy~~$vS}!O%S!O!P%X!Q![%g!`!a%S~%XO}~~%[P!Q![%_~%dPl~!Q![%_~%lQl~!O!P%_!Q![%g~%wOt~~%|Ox~~&PRO!`%|!`!a&Y!a~%|~&_On~~&dOw~~&iTh~!Q![&d!c!}&d#R#S&d#T#o&d,U4^&d~&}Ov~~'SOz~~'XOo~~'^O|~",
  tokenizers: [0],
  topRules: {"graph":[0,1]},
  specialized: [{term: 24, get: value => spec_simpleid[value] || -1}],
  tokenPrec: 0
})
